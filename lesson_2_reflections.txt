What happens when you initialize a repository? Why do you need to do it?
  When you initialise a repository, it creates a .git directory and setups git to use.  You need to do this so you can use git locally to start to store and version control files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
  The staging area offers you a space to hold files, and to review before you commit them to the Git repository.

How can you use the staging area to make sure you have one commit per logical change?
  You can use the staging area to make sure you have one commit per logical change by adding one file to the staging area and then commit this, then adding another file to the staging area, and then commiting this.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
  Branches would be helpful if working on one file solely to get something working, that way the ,aster branch will only be updated when the files are correct.

How do the diagrams help you visualize the branch structure?
  Diagrams help you visualise the branch structure, by drawing out the commit logs.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
  The result of merging two branches together, is to get one branch with the latest versions of the code in it. We show it in the diagaram as having two parents, as we have merged two branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
  Pros - Speedier and more efficent
  Cons - May merge stuff not needed
