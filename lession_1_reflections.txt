How did viewing a diff between two versions of a file help you see the bug that was introduced?
  By using the diff command, I was able to see the differences between the two files, rather than having to compare the two files by eye line by line, which was useful considering there was over 1000 lines in each file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
  By having copies of the history of a file, you can look back on the changes made.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
  The pro is that you are control of when you commit and/or save the file. One con maybe that you forget to save/commit and lose changes made.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
  Git is more advanced, allowing tracking of more than file.

How can you use the commands git log and git diff to view the history of files?
  Git log will show the commit history including commit comments. Git diff will show the differences in files between two commits. 

How might using version control make you more confident to make changes that could break something?
  By using version control, you will be able to get back to a stable version of your code, and be able to see what has changed between the code that worked and the code with the bug introduced.
